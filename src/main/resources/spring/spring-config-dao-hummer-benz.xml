<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd">
		
   <bean id="ds-benz" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
	    <property name="poolProperties">
	        <bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
	            <property name="driverClassName" value="${db.benz.driverClassName}"/>
	            <property name="url" value="${db.benz.url}"/>
	            <property name="username" value="${db.benz.username}"/>
	            <property name="password" value="${db.benz.password}"/>
	            <property name="jmxEnabled" value="true"/>
	            <property name="testWhileIdle" value="false"/>
	            <property name="testOnBorrow" value="true"/>
	            <property name="validationInterval" value="30000"/>
	            <property name="testOnReturn" value="false"/>
	            <property name="validationQuery" value="select 1"/>
	            <property name="timeBetweenEvictionRunsMillis" value="30000"/>
	            <property name="maxActive" value="100"/>
	            <property name="initialSize" value="10"/>
	            <property name="maxWait" value="10000"/>
	            <property name="removeAbandonedTimeout" value="120"/>
	            <property name="minEvictableIdleTimeMillis" value="30000"/>
	            <property name="minIdle" value="10"/>
	            <property name="logAbandoned" value="true"/>
	            <property name="removeAbandoned" value="true"/>
	        </bean>
	    </property>
	</bean>
       
	<!-- ========= MyBatis SqlSession配置 ========= -->
	<!-- 使用SqlSessionFactoryBean工厂产生SqlSession对象，方便后期注入DAO -->
	<bean id="sqlSessionFactory-ds-benz" class="org.mybatis.spring.SqlSessionFactoryBean">		
		<property name="configLocation" value="classpath:mybatis/configuration-benz.xml" />
		<property name="dataSource" ref="ds-benz" />
	</bean>
	
	<!-- 注意：MYBATIS支持两种scan持久层方式 1继承接口方式 2注解扫描方式; mybatis3.1后提供了MAPPER持久层的scan方式 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory-ds-benz" />
		<property name="basePackage" value="com.jd.payment.risk.benz.dao.ds" />
		<!--注解扫描方式:所有需要动态配置的接口要增加注解-->
		<property name="annotationClass" value="com.jd.payment.common.annotation.MyBatisRepository" />
	</bean>
	
</beans>